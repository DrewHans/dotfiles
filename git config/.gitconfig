[user]
    name = DrewHans555
    email = drewhans555@gmail.com

[core]
    editor = vim

[alias]
    #########################################################################
    ## This alias pulls changes from the remote, rebases any local commits to 
    ##  come after the commits pulled down, then removes remote-tracking
    ##  branches that no longer exist on the remote.
    ## use: git update
    up = !git pull --rebase --prune $@ && \
          git submodule update --init --recursive
    
    #########################################################################
    ## These alias allow you to create / undo a commit savepoint, useful 
    ##  when it's time for lunch
    ## use: git save 
    ## use: git unsave
    save = !git add -A && git commit -m 'SAVEPOINT'
    unsave = reset HEAD~1 --mixed

    #########################################################################
    ## These alias allow you to search for / switch to a branch
    ## use: git which <branch name>
    ## use: git lucky <branch name>
    which = !git branch | grep -i
    lucky = !bash -c 'git checkout $(git which $1 -m1)' - 

    #########################################################################
    ## This alias starts up a local git daemon server
    ## use: git serve
    serve = daemon \
            --reuseaddr \
            --verbose \
            --base-path=. \
            --export-all ./.git

    #########################################################################
    ## These aliases open the git repo location in your web browser
    ## use: git open OR git browse
    open = "!f() { REPO_URL=$(git config remote.origin.url); explorer ${REPO_URL%%.git}; }; f"
    browse = !git open

    #########################################################################
    ## These aliases show pretty logs
    ## use: git lg1
    lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
    lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
    lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'

    lg1 = !"git lg1-specific --all"
    lg2 = !"git lg2-specific --all"
    lg3 = !"git lg3-specific --all"

    lg = !"git lg1"

    #########################################################################
    ## These aliases are just easy to remember
    unadd = reset HEAD~1
    uncommit = reset --soft HEAD~1
    branches = branch -a
    tags = tag -n1 --list
    stashes = stash list
    pushb = push --set-upstream origin
